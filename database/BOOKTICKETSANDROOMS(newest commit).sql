CREATE DATABASE BookingTicketsAndRooms

GO

USE BookingTicketsAndRooms

GO

CREATE TABLE ROLES(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	Name NVARCHAR(50) NOT NULL,
)

GO

CREATE TABLE USERS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	Username VARCHAR(50) NOT NULL UNIQUE,
	Password VARCHAR(100) NOT NULL,
	PasswordAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	Name NVARCHAR(50) NOT NULL,
	Email VARCHAR(100) NOT NULL UNIQUE,
	PhoneNumber NUMERIC NOT NULL,
	Birthday DATE NOT NULL,
	RoleId INT CONSTRAINT FK_USERS_ROLES FOREIGN KEY (RoleId) REFERENCES ROLES(Id) NOT NULL,
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
)

GO

CREATE TABLE HOTELS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	Name NVARCHAR(100) NOT NULL, -- Tên khách s?n
	PhoneNumber NUMERIC NULL, -- S? ?i?n tho?i liên h?
	Email VARCHAR(100) NULL, -- Email liên h?
	Address NVARCHAR(200) NOT NULL, -- ??a ch? khách s?n
	City NVARCHAR(200) NOT NULL,
	EmtyRooms INT NOT NULL
)

GO

CREATE TABLE ROOMS(
	Id INT IDENTITY(1,1) NOT NULL,
	PRIMARY KEY(Id, HotelId),
	Name NVARCHAR(100) NOT NULL, -- Tên phòng
	Price FLOAT NOT NULL, -- Giá phòng
	HotelId INT CONSTRAINT FK_ROOMS_HOTELS FOREIGN KEY (HotelId) REFERENCES HOTELS(Id) NOT NULL,
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	Status CHAR(5) CHECK(Status = 'TRUE' OR Status = 'FALSE') DEFAULT 'TRUE' NOT NULL,
)

GO

CREATE TABLE AIRPORTS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	Name NVARCHAR(100) NOT NULL, -- Tên sân bay
	Address NVARCHAR(100) NOT NULL, -- ??a ch? sân bay
	PhoneNumber NUMERIC NULL, -- S? ?i?n tho?i liên h?
)

GO

CREATE TABLE AIRLINECLASS(
	Id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	Name NVARCHAR(30) CHECK(NAME = 'Ph? thông' OR NAME = 'Ph? thông ??c bi?t' OR NAME = 'Th??ng gia'  OR NAME = 'H?ng nh?t') NOT NULL, -- H?ng gh?
	Price FLOAT NOT NULL, -- Giá gh?
)

GO

CREATE TABLE FLIGHTS(
	Id INT IDENTITY(1,1) NOT NULL,
	PRIMARY KEY(Id, AirportId),
	FromLocation NVARCHAR(100) NOT NULL, -- N?i ?i
	ToLocation NVARCHAR(100) NOT NULL, -- N?i ??n
	DateOfDepartment DATETIME NOT NULL, -- Ngày ?i
	EmptySeat INT NOT NULL, -- S? l??ng gh? tr?ng 
	AirportId INT CONSTRAINT FK_FLIGHTS_AIRPORTS FOREIGN KEY (AirportId) REFERENCES AIRPORTS(Id),
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
)

GO

CREATE TABLE SEATS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	AirlineClassId INT CONSTRAINT FK_SEATS_AIRLINECLASS FOREIGN KEY (AirlineClassId) REFERENCES AIRLINECLASS(Id) NOT NULL, -- H?ng gh?
	Status CHAR(5) CHECK(Status = 'TRUE' OR Status = 'FALSE') DEFAULT 'TRUE' NOT NULL, -- Tr?ng thái gh?
	FlightId INT NOT NULL,
	AirportId INT NOT NULL,
	CONSTRAINT FK_SEATS_FLIGHTS FOREIGN KEY (FlightId, AirportId) REFERENCES FLIGHTS(Id, AirportId),
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
)

GO

CREATE TABLE BOOKINGROOMS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	UserId INT CONSTRAINT FK_BOOKINGROOMS_USERS FOREIGN KEY (USERID) REFERENCES USERS(ID) NOT NULL,
	HotelId INT NOT NULL,
	RoomId INT NOT NULL,
	CONSTRAINT FK_BOOKINGROOMS_ROOMS FOREIGN KEY (RoomId, HotelId) REFERENCES ROOMS(Id, HotelId),
	Price FLOAT NOT NULL,
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
)

GO

CREATE TABLE BOOKINGFLIGHTS(
	Id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	UserId INT CONSTRAINT FK_BOOKINGFLIGHTS_USERS FOREIGN KEY (USERID) REFERENCES USERS(ID) NOT NULL,
	AirportId INT NOT NULL,
	FlightId INT NOT NULL,
	CONSTRAINT FK_BOOKINGFLIGHTS_FLIGHTS FOREIGN KEY (FlightId, AirportId) REFERENCES FLIGHTS(Id, AirportId),
	SeatId INT CONSTRAINT FK_BOOKINGFLIGHTS_SEATS FOREIGN KEY (SeatId) REFERENCES SEATS(Id) NOT NULL,
	PRICE FLOAT NOT NULL,
	CreateAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
)

GO

--AUTO UPDATE SEATS
CREATE TRIGGER seatUpdate ON BOOKINGFLIGHTS AFTER INSERT AS
BEGIN
	UPDATE FLIGHTS
	SET EmptySeat = EmptySeat - 1
	FROM FLIGHTS
	JOIN inserted ON FLIGHTS.Id = inserted.FlightId
END;

--AUTO UPDATE SEATS STATUS 
CREATE TRIGGER seatStatus ON BOOKINGFLIGHTS AFTER INSERT AS
BEGIN
	UPDATE SEATS
	SET Status = 'FALSE'
	FROM SEATS
	JOIN inserted ON SEATS.FlightId = inserted.FlightId
END;
--AUTO UPDATE ROOM 
CREATE TRIGGER roomUpdate ON BOOKINGROOMS AFTER INSERT AS 
BEGIN
	UPDATE HOTELS
	SET EmtyRooms = EmtyRooms -1
	From HOTELS
	JOIN inserted ON HOTELS.Id = inserted.HotelId
END;
CREATE TRIGGER roomStatus ON BOOKINGROOMS AFTER INSERT AS 
BEGIN
	UPDATE ROOMS
	SET Status = 'FALSE'
	From ROOMS
	JOIN inserted ON ROOMS.Id = inserted.RoomId
END;
/*INSERT INTO ROLES(NAME) VALUES ('User'), ('Guide'), ('Lead-Guide'), ('Admin')
USE MASTER
DROP DATABASE Booking*/

drop database BookingTicketsAndRooms

use master